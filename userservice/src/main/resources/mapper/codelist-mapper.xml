<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.syfri.userservice.dao.CodelistDAO">
	<!--1.查询条件-->
	<sql id="SQL_CONDITION">
		<if test="codeid != null and codeid != '' ">
		 and t.codeid = #{codeid}
		</if>
		<if test="codetype != null and codetype != '' ">
		 and t.codetype = #{codetype}
		</if>
		<if test="deleteFlag != null and deleteFlag != '' ">
		 and t.delete_flag = #{deleteFlag}
		</if>
		<if test="remark != null and remark != '' ">
		 and t.remark = #{remark}
		</if>
		<if test="language != null and language != '' ">
		 and t.language = #{language}
		</if>
		<if test="codetypeName != null and codetypeName != '' ">
		 and t.codetype_name = #{codetypeName}
		</if>
		<if test="createId != null and createId != '' ">
		 and t.create_id = #{createId}
		</if>
		<if test="createName != null and createName != '' ">
		 and t.create_name = #{createName}
		</if>
		<if test="createTime != null and createTime != '' ">
		 and t.create_time = #{createTime}
		</if>
		<if test="alterId != null and alterId != '' ">
		 and t.alter_id = #{alterId}
		</if>
		<if test="alterName != null and alterName != '' ">
		 and t.alter_name = #{alterName}
		</if>
		<if test="alterTime != null and alterTime != '' ">
		 and t.alter_time = #{alterTime}
		</if>
	</sql>

	<!--2.查询内容-->
	<sql id="SQL_CONTENT">
		t.codeid codeid,
		t.codetype codetype,
		t.codetype_name codetypeName,
		t.delete_flag deleteFlag,
		t.remark remark,
		t.language language,
		t.create_id createId,
		t.create_name createName,
		TO_CHAR(t.create_time,'yyyy-MM-dd HH24:mi:ss') createTime,
		t.alter_id alterId,
		t.alter_name alterName,
		TO_CHAR(t.alter_time,'yyyy-MM-dd HH24:mi:ss') alterTime
	</sql>

	<!--3.查询记录数-->
	<select id="doSearchCount" parameterType="CodelistVO" resultType="java.lang.Integer">
		SELECT COUNT(0) AS NUM FROM SYS_CODELIST t WHERE 1=1 AND DELETE_FLAG = 'N'
		<include refid="SQL_CONDITION"/>
	</select>

	<!--4.按条件查询记录-->
	<select id="doSearchListByVO" parameterType="CodelistVO"  resultType="CodelistVO"> 
		SELECT 
			<include refid="SQL_CONTENT"/>
		FROM SYS_CODELIST t  WHERE t.DELETE_FLAG = 'N' 
			<include refid="SQL_CONDITION"/>
	</select>

	<!--5.根据ID查询记录-->
	<select id="doFindById" parameterType="CodelistVO"  resultType="CodelistVO">  
		SELECT 
		<include refid="SQL_CONTENT"/>
		FROM SYS_CODELIST t 
		WHERE t.DELETE_FLAG = 'N' AND  t.codeid = #{value} 
	</select>

	<!--6.按照VO插入-->
	<insert  id="doInsertByVO"  parameterType="CodelistVO"> 
		<selectKey resultType="String" order="BEFORE" keyProperty="codeid">
			SELECT SYS_GUID() AS codeid FROM DUAL
		</selectKey>
		INSERT INTO SYS_CODELIST(codeid,codetype,delete_flag,remark,language,codetype_name,create_id,create_name,create_time,alter_id,alter_name,alter_time)
		VALUES(#{codeid,jdbcType=VARCHAR},#{codetype,jdbcType=VARCHAR},'N',#{remark,jdbcType=VARCHAR},#{language,jdbcType=VARCHAR},#{codetypeName,jdbcType=VARCHAR},#{createId,jdbcType=VARCHAR},#{createName,jdbcType=VARCHAR},SYSDATE,#{alterId,jdbcType=VARCHAR},#{alterName,jdbcType=VARCHAR},#{alterTime,jdbcType=TIMESTAMP})
	 </insert>

	<!--7.批量插入-->
	<insert  id="doBatchInsertByList"  parameterType="java.util.List"> 
		INSERT INTO SYS_CODELIST(codeid,codetype,delete_flag,remark,language,codetype_name,create_id,create_name,create_time,alter_id,alter_name,alter_time)
		SELECT SYS_GUID() codeid, A.* 
		FROM ( 
		<foreach collection="list" item="item" index="index" separator="UNION ALL" >
		SELECT
			#{item.codetype,jdbcType=VARCHAR} codetype,'N' delete_flag,#{item.remark,jdbcType=VARCHAR} remark,#{item.language,jdbcType=VARCHAR} language,#{item.codetypeName,jdbcType=VARCHAR} codetype_name,#{item.createId,jdbcType=VARCHAR} create_id,#{item.createName,jdbcType=VARCHAR} create_name,SYSDATE create_time,#{item.alterId,jdbcType=VARCHAR} alter_id,#{item.alterName,jdbcType=VARCHAR} alter_name,#{item.alterTime,jdbcType=TIMESTAMP} alter_time
		FROM DUAL
		</foreach>
		) A
	</insert>

	<!--8.按主键逻辑删除-->
	<update id="doDeleteById"  parameterType="String"> 
		UPDATE  SYS_CODELIST t SET t.DELETE_FLAG = 'Y'  WHERE 1=1   AND t.codeid = #{value} 
	</update>

	<!--9.按复合条件逻辑更新-->
	<update  id="doUpdateByVO"  parameterType="CodelistVO"> 
		UPDATE   SYS_CODELIST  
		<set>
			<if test="codeid != null">codeid=#{codeid},</if>
			<if test="codetype != null">codetype=#{codetype},</if>
			<if test="deleteFlag != null">delete_flag='N',</if>
			<if test="remark != null">remark=#{remark},</if>
			<if test="language != null">language=#{language},</if>
			<if test="codetypeName != null">codetype_name=#{codetypeName},</if>
			<if test="alterId != null">alter_id=#{alterId},</if>
			<if test="alterName != null">alter_name=#{alterName},</if>
			alter_time=TO_DATE(TO_CHAR(SYSDATE,'yyyy-MM-dd HH24:mi:ss'),'yyyy-MM-dd HH24:mi:ss')
		</set>
		WHERE  codeid = #{codeid}
	</update>

	<!--10.批量修改-->
	<update id="doBatchUpdateByList"  parameterType="java.util.List">
		INSERT INTO SYS_CODELIST(codeid,codetype,delete_flag,remark,language,codetype_name,create_id,create_name,create_time,alter_id,alter_name,alter_time)
		VALUES
		<foreach collection="list" item="item" index="index" separator="," >
			 #{item.codetype,jdbcType=VARCHAR} codetype,'N' delete_flag,#{item.remark,jdbcType=VARCHAR} remark,#{item.language,jdbcType=VARCHAR} language,#{item.codetypeName,jdbcType=VARCHAR} codetype_name,#{item.createId,jdbcType=VARCHAR} create_id,#{item.createName,jdbcType=VARCHAR} create_name,SYSDATE create_time,#{item.alterId,jdbcType=VARCHAR} alter_id,#{item.alterName,jdbcType=VARCHAR} alter_name,SYSDATE alter_time
		</foreach>
		ON DUPLICATE KEY UPDATE   
			codeid = VALUES(codeid),
			codetype = VALUES(codetype),
			delete_flag = VALUES(delete_flag),
			remark = VALUES(remark),
			language = VALUES(language),
			codetype_name = VALUES(codetype_name),
			create_id = VALUES(create_id),
			create_name = VALUES(create_name),
			create_time = VALUES(create_time),
			alter_id = VALUES(alter_id),
			alter_name = VALUES(alter_name),
			alter_time = VALUES(alter_time)
	</update>

	<!--11.根据对象查询记录-->
	<select id="doFindByVO" parameterType="CodelistVO"  resultType="CodelistVO">  
		SELECT 
		<include refid="SQL_CONTENT"/>
		FROM SYS_CODELIST t 
		WHERE t.DELETE_FLAG = 'N' 
		<include refid="SQL_CONDITION"/>
	</select>

	<!--12.根据代码类型查询代码集-->
	<select id="doFindDetail" resultType="CodelistDetailVO">
		SELECT t.pkid,t.code_value codeValue,t.code_name codeName,t.codeid,t.remark,
		t.create_id createId,t.create_name createName,TO_CHAR(t.create_time,'yyyy-MM-dd HH24:mi:ss') createTime,
		t.alter_id alterId,t.alter_name alterName,TO_CHAR(t.alter_time,'yyyy-MM-dd HH24:mi:ss') alterTime
		FROM SYS_CODELIST_DETAIL t
		WHERE delete_flag = 'N' AND codeid = #{value}
		ORDER BY code_value
	</select>

	<!--13.根据代码类型/代码类型、创建时间查询-->
	<select id="doSearchByVO" parameterType="CodelistVO"  resultType="CodelistVO">
		SELECT
		<include refid="SQL_CONTENT"/>
		FROM SYS_CODELIST t  WHERE t.DELETE_FLAG = 'N'
		<if test="codetype != null and codetype != '' ">
			and t.codetype LIKE concat(concat('%',#{codetype}),'%') ESCAPE '\'
		</if>
		<if test="codetypeName != null and codetypeName != '' ">
			and t.codetype_name LIKE concat(concat('%',#{codetypeName}),'%') ESCAPE '\'
		</if>
		<if test="createTimeBegin != null and createTimeBegin != '' ">
			and t.create_time &gt;= to_date(#{createTimeBegin},'yyyy-MM-dd')
		</if>
		<if test="createTimeEnd != null and createTimeEnd != '' ">
			and t.create_time &lt;= to_date(#{createTimeEnd},'yyyy-MM-dd') + 1
		</if>
		ORDER BY nvl(t.alter_time,t.create_time) DESC
	</select>

	<!--12.从表查询：根据代码类型查询代码集-->
	<select id="doFindCodelistDetail" parameterType="CodelistDetailVO" resultType="CodelistDetailVO">
		SELECT t.pkid,t.code_value codeValue,t.code_name codeName,t.codeid,t.remark,
		t.create_id createId,t.create_name createName,TO_CHAR(t.create_time,'yyyy-MM-dd HH24:mi:ss') createTime,
		t.alter_id alterId,t.alter_name alterName,TO_CHAR(t.alter_time,'yyyy-MM-dd HH24:mi:ss') alterTime
		FROM SYS_CODELIST_DETAIL t
		WHERE delete_flag = 'N'
		<if test="pkid != null and pkid !='' ">
			and t.pkid = #{pkid}
		</if>
	   	<if test="codeid != null and codeid !='' ">
			and t.codeid = #{codeid}
		</if>
		<if test="codeValue != null and codeValue != '' ">
			and t.code_value LIKE concat(concat('%',#{codeValue}),'%') ESCAPE '\'
		</if>
		<if test="codeName != null and codeName != '' ">
			and t.code_name LIKE concat(concat('%',#{codeName}),'%') ESCAPE '\'
		</if>
		<if test="codetype != null and codetype !='' ">
			and t.codetype = #{codetype}
		</if>
		ORDER BY code_value
	</select>

	<!--13.从表新增-->
	<insert id="doInsertCodelistDetail"  parameterType="CodelistDetailVO">
		<selectKey resultType="String" order="BEFORE" keyProperty="pkid">
			SELECT SYS_GUID() AS pkid FROM DUAL
		</selectKey>
		INSERT INTO SYS_CODELIST_DETAIL(pkid,code_value,code_name,codeid,codetype,codetype_name,delete_flag,remark,create_id,create_name,create_time)
		VALUES(#{pkid,jdbcType=VARCHAR},#{codeValue,jdbcType=VARCHAR},#{codeName,jdbcType=VARCHAR},#{codeid,jdbcType=VARCHAR},#{codetype,jdbcType=VARCHAR},#{codetypeName,jdbcType=VARCHAR},'N',#{remark,jdbcType=VARCHAR},#{createId,jdbcType=VARCHAR},#{createName,jdbcType=VARCHAR},SYSDATE)
	</insert>
	<!--14.从表修改-->
	<update  id="doUpdateCodelistDetail"  parameterType="CodelistdetailVO">
		UPDATE   SYS_CODELIST_DETAIL
		<set>
			<if test="pkid != null">pkid=#{pkid},</if>
			<if test="codeValue != null">code_value=#{codeValue},</if>
			<if test="codeName != null">code_name=#{codeName},</if>
			<if test="codeid != null">codeid=#{codeid},</if>
			<if test="deleteFlag != null">delete_flag='N',</if>
			<if test="remark != null">remark=#{remark},</if>
			<if test="alterId != null">alter_id=#{alterId},</if>
			<if test="alterName != null">alter_name=#{alterName},</if>
			alter_time=TO_DATE(TO_CHAR(SYSDATE,'yyyy-MM-dd HH24:mi:ss'),'yyyy-MM-dd HH24:mi:ss')
		</set>
		WHERE  PKID = #{pkid}
	</update>

	<!--15.从表删除-->
	<update id="doDeleteCodelistDetail"  parameterType="String">
		UPDATE  SYS_CODELIST_DETAIL t SET t.DELETE_FLAG = 'Y'  WHERE 1 = 1 AND t.PKID = #{pkid}
	</update>

	<!--15.从表删除-->
	<update id="doDeleteCodelistDetailBatch"  parameterType="String">
		UPDATE  SYS_CODELIST_DETAIL t SET t.DELETE_FLAG = 'Y'  WHERE 1 = 1 AND t.codeid = #{codeid}
	</update>

	<!--16.查询从表-->
	<select id="doFindByCodelistDetailNum" parameterType="CodelistDetailVO">
		SELECT COUNT(1) FROM SYS_CODELIST_DETAIL t WHERE t.DELETE_FLAG = 'Y' AND t.codeid = #{codeid} AND t.pkid = #{pkid}
	</select>

	<!--17.根据代码类型查询代码集-->
	<select id="doFindCodelistByType" resultType="CodelistDetailVO" parameterType="String">
		SELECT code_value codeValue,code_name codeName
		FROM SYS_CODELIST_DETAIL t  WHERE t.DELETE_FLAG = 'N'
		AND codeid = (SELECT codeid FROM SYS_CODELIST c WHERE c.DELETE_FLAG = 'N' AND codetype=#{value})
		ORDER BY code_value
	</select>

	<!--18.根据代码类型查询代码集，按数字大小排序-->
	<select id="doFindCodelistByTypeOrderByNum" resultType="CodelistDetailVO" parameterType="String">
		SELECT code_value codeValue,code_name codeName
		FROM SYS_CODELIST_DETAIL t  WHERE t.DELETE_FLAG = 'N'
		AND codeid = (SELECT codeid FROM SYS_CODELIST c WHERE c.DELETE_FLAG = 'N' AND codetype=#{value})
		ORDER BY CAST(code_value AS INT)
	</select>

	<!--查询行政区划 只保留31个省-->
	<select id="doFindXzqhCodelist" resultType="CodelistDetailVO" parameterType="String">
		SELECT code_value codeValue,code_name codeName
		FROM SYS_CODELIST_DETAIL t  WHERE t.DELETE_FLAG = 'N'
		AND codeid = (SELECT codeid FROM SYS_CODELIST c WHERE c.DELETE_FLAG = 'N' AND codetype=#{value})
		AND SUBSTR(t.code_value,3,6) = '0000'
		ORDER BY code_value
	</select>

	<!--根据行政区划代码模糊查询-->
	<select id="doFindXzqhByDm" resultType="CodelistDetailVO" parameterType="CodelistDetailVO">
		SELECT code_value codeValue,code_name codeName
		FROM SYS_CODELIST_DETAIL t  WHERE t.DELETE_FLAG = 'N' AND codetype = 'XZQH'
		AND code_value like concat(#{codeValue},'%')
		<if test="remark=='second'">
			AND SUBSTR(code_value,5,2) = '00' AND SUBSTR(code_value,3,4) != '0000'
		</if>
		<if test="remark=='third'">
			AND SUBSTR(code_value,5,2) != '00'
		</if>
		ORDER BY code_value
	</select>
</mapper>